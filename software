import 'package:flutter/material.dart';
import 'dart:math'; // pow()

class Nota {
  // Atributos
  String _nome;
  double _nota1;
  double _nota2;
  double _notaf = 0;

  // Construtor
  Nota(this._nota1, this._nota2, [this._nome]) {
    this._notaf = calcularNotaf();
  }

  // Métodos
  double calcularNotaf() {
    return (_nota1 + _nota2) / 2;
  }
}

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  final List<Nota> lista = []; // Lista vazia

  // Construtor
  MyApp() {
    Nota nota1 = Nota(10, 9, "Adrian Santos");
    Nota nota2 = Nota(10, 2, "Tirulipa");
    lista.add(nota1);
    lista.add(nota2);
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: "Aula de Flutter",
      theme: ThemeData(
        primarySwatch: Colors.green,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: HomePage(lista),
    );
  }
}

class HomePage extends StatefulWidget {
  final List<Nota> lista;

  // Construtor
  HomePage(this.lista);

  @override
  _HomePageState createState() => _HomePageState(lista);
}

class _HomePageState extends State<HomePage> {
  final List<Nota> lista;

  // Construtor
  _HomePageState(this.lista);

  // Métodos
  void _atualizarTela() {
    setState(() {});
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      drawer: NavDrawer(lista),
      appBar: AppBar(
        title: Text("Notas (${lista.length})"),
      ),
      body: ListView.builder(
          itemCount: lista.length,
          itemBuilder: (BuildContext context, int index) {
            return ListTile(
              title: Text(
                "${lista[index]._nome}",
                style: TextStyle(fontSize: 18.0),
              ),
              onTap: () {},
            );
          }),
      floatingActionButton: FloatingActionButton(
        onPressed: _atualizarTela,
        tooltip: 'Atualizar',
        child: Icon(Icons.update),
      ),
    );
  }
}

class NavDrawer extends StatelessWidget {
  // Atributos
  final List lista;
  final double _fontSize = 17.0;

  // Construtor
  NavDrawer(this.lista);

  @override
  Widget build(BuildContext context) {
    return Drawer(
      child: ListView(
        padding: EdgeInsets.zero,
        children: <Widget>[
          // Opcional
          DrawerHeader(
            child: Text(
              "Menu",
              style: TextStyle(color: Colors.white, fontSize: 25),
            ),
            decoration: BoxDecoration(color: Colors.black),
          ),
          ListTile(
            leading: Icon(Icons.add_chart ),
            title: Text(
              "Informações do Nota",
              style: TextStyle(fontSize: _fontSize),
            ),
            onTap: () {
              Navigator.pop(context); // Fecha o Drawer
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => TelaInformacoesDoNota(lista),
                ),
              );
            },
          ),
          ListTile(
            leading: Icon(Icons.add_to_photos_sharp),
            title: Text(
              "Cadastrar um Novo Nota",
              style: TextStyle(fontSize: _fontSize),
            ),
            onTap: () {
              Navigator.pop(context);
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => TelaCadastrarNota(lista),
                ),
              );
            },
          ),
          Container(
            padding: EdgeInsets.all(20.0),
          ),
          Align(
            alignment: Alignment.bottomCenter,
            child: ListTile(
              leading: Icon(Icons.face),
              title: Text(
                "Sobre",
                style: TextStyle(fontSize: _fontSize),
              ),
              onTap: () {
              Navigator.pop(context);
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => FirstRoute(),
                ),
              );
            },
            ),
          ),
        ],
      ),
    );
  }
}
class FirstRoute extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Sobre'),
      ),
      body: Center(
        child: ElevatedButton(
          child: Text('Um programa feito para calcular duas notas e retornar a media'),
          onPressed: () {
            // Navigate to second route when tapped.
            Navigator.push(
    context,
    MaterialPageRoute(builder: (context) => SecondRoute()),
  );
          },
        ),
      ),
    );
  }
}

class SecondRoute extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Sobre"),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Navigate back to first route when tapped.
            Navigator.pop(context);
          },
          child: Text('Adrian Santos Pereira'),
        ),
      ),
    );
  }
}
//-----------------------------------------------------------------------------
// Tela Informações do Nota
//-----------------------------------------------------------------------------

class TelaInformacoesDoNota extends StatefulWidget {
  final List<Nota> lista;

  // Construtor
  TelaInformacoesDoNota(this.lista);

  @override
  _TelaInformacoesDoNota createState() => _TelaInformacoesDoNota(lista);
}

class _TelaInformacoesDoNota extends State<TelaInformacoesDoNota> {
  // Atributos
  final List lista;
  Nota nota;
  int index = -1;
  double _fontSize = 18.0;
  final nomeController = TextEditingController();
  final nota1Controller = TextEditingController();
  final nota2Controller = TextEditingController();
  final notafController = TextEditingController();
  bool _edicaoHabilitada = false;

  // Construtor
  _TelaInformacoesDoNota(this.lista) {
    if (lista.length > 0) {
      index = 0;
      nota = lista[0];
      nomeController.text = nota._nome;
      nota1Controller.text = nota._nota1.toString();
      nota2Controller.text = nota._nota2.toString();
      notafController.text = nota._notaf.toStringAsFixed(1);
    }
  }

  // Métodos
  void _exibirRegistro(index) {
    if (index >= 0 && index < lista.length) {
      this.index = index;
      nota = lista[index];
      nomeController.text = nota._nome;
      nota1Controller.text = nota._nota1.toString();
      nota2Controller.text = nota._nota2.toString();
      notafController.text = nota._notaf.toStringAsFixed(1);
      setState(() {});
    }
  }

  void _atualizarDados() {
    if (index >= 0 && index < lista.length) {
      _edicaoHabilitada = false;
      lista[index]._nome = nomeController.text;
      lista[index]._nota1 = double.parse(nota1Controller.text);
      lista[index]._nota2 = double.parse(nota2Controller.text);
      lista[index]._notaf = lista[index].calcularNotaf();
      setState(() {});
    }
  }

  @override
  Widget build(BuildContext context) {
    var titulo = "Informações do Nota";
    if (nota == null) {
      return Scaffold(
        appBar: AppBar(title: Text(titulo)),
        body: Column(
          children: <Widget>[
            Text("Nenhum nota encontrado!"),
            Container(
              color: Colors.blueGrey,
              child: BackButton(),
            ),
          ],
        ),
      );
    }
    return Scaffold(
      appBar: AppBar(title: Text(titulo)),
      body: Container(
        padding: EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Padding(
              padding: EdgeInsets.all(5),
              child: TextField(
                enabled: _edicaoHabilitada,
                decoration: InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "Nome completo",
                  // hintText: "Nome do nota",
                ),
                style: TextStyle(fontSize: _fontSize),
                controller: nomeController,
              ),
            ),
            // --- Nota1 do Nota ---
            Padding(
              padding: EdgeInsets.all(5),
              child: TextField(
                enabled: _edicaoHabilitada,
                keyboardType: TextInputType.number,
                decoration: InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "Nota1",
                ),
                style: TextStyle(fontSize: _fontSize),
                controller: nota1Controller,
              ),
            ),
            // --- Nota2 do Nota ---
            Padding(
              padding: EdgeInsets.fromLTRB(5, 5, 5, 20),
              child: TextField(
                enabled: _edicaoHabilitada,
                keyboardType: TextInputType.number,
                decoration: InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "Nota2",
                  hintText: "Nota2",
                ),
                style: TextStyle(fontSize: _fontSize),
                controller: nota2Controller,
              ),
            ),
            // --- NOTA FINAL (desabilitado) ---
            Padding(
              padding: EdgeInsets.fromLTRB(5, 5, 5, 20),
              child: TextField(
                enabled: false,
                // keyboardType: TextInputType.number,
                decoration: InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "NOTA FINAL",
                  hintText: "NOTA FINAL",
                ),
                style: TextStyle(fontSize: _fontSize),
                controller: notafController,
              ),
            ),
            RaisedButton(
              child: Text(
                "Atualizar Dados",
                style: TextStyle(fontSize: _fontSize),
              ),
              onPressed: _atualizarDados,
            ),
            Text(
              "[${index + 1}/${lista.length}]",
              style: TextStyle(fontSize: 15.0),
            ),
            Align(
              alignment: Alignment.bottomCenter,
              child: Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: <FloatingActionButton>[
                  FloatingActionButton(
                    heroTag: null,
                    onPressed: () => _exibirRegistro(0),
                    tooltip: 'Primeiro',
                    child: Icon(Icons.first_page),
                  ),
                  FloatingActionButton(
                    heroTag: null,
                    onPressed: () => _exibirRegistro(index - 1),
                    tooltip: 'Primeiro',
                    child: Icon(Icons.navigate_before),
                  ),
                  FloatingActionButton(
                    heroTag: null,
                    onPressed: () => _exibirRegistro(index + 1),
                    tooltip: 'Primeiro',
                    child: Icon(Icons.navigate_next),
                  ),
                  FloatingActionButton(
                    heroTag: null,
                    onPressed: () => _exibirRegistro(lista.length - 1),
                    tooltip: 'Primeiro',
                    child: Icon(Icons.last_page),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}



//-----------------------------------------------------------------------------
// Tela: Cadastrar Nota
// ----------------------------------------------------------------------------

class TelaCadastrarNota extends StatefulWidget {
  final List<Nota> lista;

  // Construtor
  TelaCadastrarNota(this.lista);

  @override
  _TelaCadastrarNotaState createState() =>
      _TelaCadastrarNotaState(lista);
}

class _TelaCadastrarNotaState extends State<TelaCadastrarNota> {
  // Atributos
  final List<Nota> lista;
  String _nome = "";
  double _nota1 = 0.0;
  double _nota2 = 0.0;
  double _fontSize = 20.0;
  final nomeController = TextEditingController();
  final nota1Controller = TextEditingController();
  final nota2Controller = TextEditingController();
  final notafController = TextEditingController();

  // Construtor
  _TelaCadastrarNotaState(this.lista);

  // Métodos
  void _cadastrarNota() {
    _nome = nomeController.text;
    _nota1 = double.parse(nota1Controller.text);
    _nota2 = double.parse(nota2Controller.text);
    if (_nota1 > 0 && _nota2 > 0) {
      var nota = Nota(_nota1, _nota2, _nome); // Cria um novo objeto
      // _notaf = nota._notaf;
      lista.add(nota);
      // _index = lista.length - 1;
      nomeController.text = "";
      nota1Controller.text = "";
      nota2Controller.text = "";
      notafController.text = "${nota._notaf.toStringAsFixed(1)}";
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Cadastrar Nota"),
      ),
      body: Container(
        padding: EdgeInsets.all(16.0),
        child: Column(
          // mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Padding(
              padding: EdgeInsets.fromLTRB(10, 10, 10, 10),
              child: Text(
                "Dados do Nota:",
                style: TextStyle(fontSize: _fontSize),
              ),
            ),
            // --- Nome do Nota ---
            Padding(
              padding: EdgeInsets.all(5),
              child: TextField(
                decoration: InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "Nome completo",
                  // hintText: "Nome do nota",
                ),
                style: TextStyle(fontSize: _fontSize),
                controller: nomeController,
              ),
            ),
            // --- Nota1 do Nota ---
            Padding(
              padding: EdgeInsets.all(5),
              child: TextField(
                keyboardType: TextInputType.number,
                decoration: InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "Nota1",
                ),
                style: TextStyle(fontSize: _fontSize),
                controller: nota1Controller,
              ),
            ),
            //  Nota2 do Nota 
            Padding(
              padding: EdgeInsets.fromLTRB(5, 5, 5, 20),
              child: TextField(
                keyboardType: TextInputType.number,
                decoration: InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "Nota2",
                  hintText: "Nota2",
                ),
                style: TextStyle(fontSize: _fontSize),
                controller: nota2Controller,
              ),
            ),
            //  NOTA FINAL
            Padding(
              padding: EdgeInsets.fromLTRB(5, 5, 5, 20),
              child: TextField(
                enabled: false,
                decoration: InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "NOTA FINAL",
                  hintText: "NOTA FINAL",
                ),
                style: TextStyle(fontSize: _fontSize),
                controller: notafController,
              ),
            ),
            // Saída
            RaisedButton(
              child: Text(
                "Cadastrar Nota",
                style: TextStyle(fontSize: _fontSize),
              ),
              onPressed: _cadastrarNota,
            ),
          ],
        ),
      ),
    );
  }
}
